{% set files = site.static|filter(f => f.path matches '/^photos/')|sort((a, b) => a.exif.DateTimeOriginal|default(a.date)|date('U') <=> b.exif.DateTimeOriginal|default(b.date)|date('U')) %}
{% if site.photos.sort == 'desc'|default('asc') %}
  {%- set files = files|reverse %}
{% endif %}
{% set image = files|first.path %}

{% extends '_default/page.html.twig' %}

    {%- block head -%}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('photoswipe/photoswipe.css') }}">
    <link rel="stylesheet" href="{{ asset('photoswipe/photoswipe-dynamic-caption-plugin.css') }}">
    {%- endblock head -%}

      {%- block css -%}
      {{ parent() }}
      div#gallery {
        display: flex;
        flex-wrap: wrap;
      }
      div#gallery::after {
        content: '';
        flex-grow: 999999999;
      }
      #gallery h1.title {
        position: fixed;
        z-index: 1;
        margin: 0.5rem;
        font-size: x-large;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
      }
      #gallery h1.title a {
        text-decoration: none;
      }
      #gallery h1.title a:hover {
        -webkit-font-smoothing: auto;
        -moz-osx-font-smoothing: auto;
      }
      #gallery div.photo {
        flex-grow: 1;
        position: relative;
        margin: $margin;
        height: $height;
        background-color: $background;
      }
      #gallery img {
        object-fit: cover;
        height: $height;
        width: 100%;
        max-width: 100%;
        min-width: 100%;
        vertical-align: bottom;
      }
      #gallery img:hover {
        cursor: zoom-in;
        filter: brightness(115%);
        transition: filter .25s ease-out;
      }
      #gallery div.caption {
        position: absolute;
        bottom: 0px;
        left: 0px;
        padding: .2rem 0 .1rem .25rem;
        width: 100%;
        font-size: small;
        font-style: italic;
        line-height: normal;
        background-color: $background;
        opacity: .4;
      }
      #gallery div.caption:hover {
        background-color: $background;
        opacity: 1;
        transition: opacity .5s ease-out;
      }
      #gallery div.caption a {
        text-decoration: none;
      }
      #gallery div.caption span.author {
        font-style: normal;
      }
      .pswp {
        --pswp-bg: {{ site.style.color.background }};
      }
      .pswp__dynamic-caption,
      .pswp__dynamic-caption a {
        color: {{ site.style.color.text }};
      }
      {%- endblock css -%}

      {%- block content ~%}
      <div id="gallery">
        <h1 class="title"><a href="{{ url('/') }}" title="{{ site.description|default(site.title) }}">{{ site.title }}</a></h1>
        {%- for file in files ~%}
          {%- if site.data.photos[file.basename] is defined ~%}
            {%- set photo = site.data.photos[file.basename] -%}
          {%- endif ~%}
          {%- set image = asset(file.path)|resize(site.photos.size.thumbnail|default(640)) -%}
          {%- set imagefull = asset(file.path)|resize(site.photos.size.full|default(1920)) ~%}
          {%- if site.photos.placeholder|default('color') == 'image' ~%}
        <div class="photo" style="background-image:url({{ image|lqip }});background-repeat:no-repeat;background-position:center;background-size:cover;">
          {%- else ~%}
        <div class="photo" style="background-color:{{ image|dominant_color }}">
          {%- endif ~%}
          {%- set attributes = {'alt': photo.alt|default(photo.title|default)} -%}
          {%- if loop.index > 10 %}{% set attributes = attributes|merge({loading: 'lazy'}) %}{% endif ~%}
          <a href="{{ url(imagefull) }}" data-pswp-width="{{ imagefull.width }}" data-pswp-height="{{ imagefull.height }}" aria-label="{{ "Click to view this photo in full size"|trans }}">
            {{ image|html(attributes|merge({decoding: 'async'})) }}
          </a>
          {%- if photo.title is defined or photo.author.name is defined ~%}
          <div class="caption">
            {%- if photo.title is defined ~%}
            <em>{{ photo.title }}</em>
            {%- endif ~%}
            {%- if photo.title is defined and photo.author.name is defined %} &middot; {% endif ~%}
            {%- if photo.author.name is defined ~%}
            {%- set author -%}
              {%- if photo.author.url is defined -%}
                <a href="{{ photo.author.url }}" title="{% trans %}Author's page{% endtrans %}">{{ photo.author.name }}</a>
              {%- else -%}
                {{ photo.author.name }}
              {%- endif -%}
            {%- endset ~%}
            <span class="author">{%- trans %}Credit: %author%{% endtrans ~%}</span>
            {%- endif ~%}
          </div>
          {%- endif ~%}
        </div>
        {%- set photo = '' -%}
        {%- endfor ~%}
      </div>
      <script type="module">
        {%- apply minify_js ~%}
        import PhotoSwipeLightbox from '{{ asset('photoswipe/photoswipe-lightbox.esm.js') }}';
        import PhotoSwipeDynamicCaption from '{{ asset('photoswipe/photoswipe-dynamic-caption-plugin.esm.js') }}';
        const lightbox = new PhotoSwipeLightbox({
          gallery: '#gallery',
          children: '.photo',
          bgOpacity: 1.0,
          imageClickAction: 'close',
          tapAction: 'close',
          pswpModule: () => import('{{ asset('photoswipe/photoswipe.esm.js') }}'),
        });
        const captionPlugin = new PhotoSwipeDynamicCaption(lightbox, {
          captionContent: '.caption',
        });
        lightbox.on('uiRegister', function() {
          lightbox.pswp.ui.registerElement({
            name: 'download-button',
            order: 8,
            isButton: true,
            tagName: 'a',
            html: {
              isCustomSVG: true,
              inner: '<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1ZM23 23H9v2h14Z" id="pswp__icn-download"/>',
              outlineID: 'pswp__icn-download'
            },
            onInit: (el, pswp) => {
              el.setAttribute('download', '');
              el.setAttribute('target', '_blank');
              el.setAttribute('rel', 'noopener');
              pswp.on('change', () => {
                el.href = pswp.currSlide.data.src;
              });
            }
          });
        });
        lightbox.init();
        {%- endapply ~%}
      </script>
      {%- endblock content ~%}